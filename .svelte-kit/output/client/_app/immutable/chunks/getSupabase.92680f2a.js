import{i as g,a as b,g as p,b as y}from"./index.da8f1b77.js";function C(s){const{supabaseUrl:n,supabaseKey:t,options:e,globalInstance:i}=p();return g()?i:b(n,t,{...e,auth:{autoRefreshToken:!1,storage:{async getItem(u){var l;let a=null;if(typeof((l=s.data)==null?void 0:l.session)<"u")a=s.data.session;else{const o=await s.parent();a=o==null?void 0:o.session}return a?JSON.stringify(a):null},removeItem(u){},setItem(u,a){}}}})}const c=Symbol("supabase-client");function S(s){const{cookies:n,request:t}=s,e=s.locals;if(e[c])return e[c];const{supabaseUrl:i,supabaseKey:u,options:a,cookieOptions:l}=p(),o=y({supabaseUrl:i,supabaseKey:u,getCookie(r){return n.get(r)},setCookie(r,f,d){n.set(r,f,d)},getRequestHeader(r){return t.headers.get(r)??void 0},options:a,cookieOptions:l});return e[c]=o,o}async function m(s){const n=s,t=s;let e;if(typeof t.depends=="function"&&t.depends("supabase:auth"),n.locals)e=S(n);else if(typeof t.parent=="function")e=C(t);else throw new Error("invalid event");const{data:{session:i}}=await e.auth.getSession();return{supabaseClient:e,session:i}}export{m as g};
